{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82105\\\\Desktop\\\\22.01.07\\\\Frontend\\\\src\\\\Rtc.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  height: 30vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n_c = Container;\nconst MainContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  position: relative;\n  display: flex;\n  justify-content: center;\n`;\n_c2 = MainContainer;\nconst MainVideo = styled.video`\n  border: 1px solid green;\n  width: 100vw;\n  height: 70vh;\n  text-align: center;\n`;\n_c3 = MainVideo;\nconst Row = styled.div`\n  text-align: center;\n  width: 100%;\n`;\n_c4 = Row;\nconst Video = styled.video`\n  border: 1px solid blue;\n  width: 30%;\n  height: 100%;\n`;\n_c5 = Video;\n\nfunction Rtc() {\n  _s();\n\n  const [yourID, setYourID] = useState(\"\");\n  const [users, setUsers] = useState({});\n  const [stream, setStream] = useState();\n  const [receivingCall, setReceivingCall] = useState(false);\n  const [caller, setCaller] = useState(\"\");\n  const [callerSignal, setCallerSignal] = useState();\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [videoMember, setVideoMember] = useState(0);\n  const userVideo = useRef();\n  const partnerVideo = useRef();\n  const socket = useRef();\n  useEffect(() => {\n    socket.current = io.connect(\"http://localhost:8000\", {\n      transports: [\"websocket\"]\n    });\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setStream(stream);\n\n      if (userVideo.current) {\n        userVideo.current.srcObject = stream;\n      }\n    });\n    socket.current.on(\"yourID\", id => {\n      setYourID(id);\n    });\n    socket.current.on(\"allUsers\", users => {\n      setUsers(users);\n    });\n    socket.current.on(\"hey\", data => {\n      setReceivingCall(true);\n      setCaller(data.from);\n      setCallerSignal(data.signal);\n    });\n    console.log(socket.current.on(\"hey\"));\n  }, []);\n\n  function callPeer(id) {\n    if (videoMember === 0) {\n      const peer = new Peer({\n        initiator: true,\n        trickle: false,\n        config: {},\n        stream: stream\n      });\n      peer.on(\"signal\", data => {\n        socket.current.emit(\"callUser\", {\n          userToCall: id,\n          signalData: data,\n          from: yourID\n        });\n      });\n      peer.on(\"stream\", stream => {\n        if (partnerVideo.current) {\n          partnerVideo.current.srcObject = stream;\n        }\n      });\n      socket.current.on(\"callAccepted\", signal => {\n        setCallAccepted(true);\n        peer.signal(signal);\n      });\n    }\n  }\n\n  function deleteThis() {\n    const div = document.getElementById(\"noNeed\");\n    div.remove();\n  }\n\n  function acceptCall() {\n    setCallAccepted(true);\n    setVideoMember(videoMember + 1);\n    const div = document.getElementById(\"noNeed\");\n    div.remove();\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: stream\n    });\n    peer.on(\"signal\", data => {\n      socket.current.emit(\"acceptCall\", {\n        signal: data,\n        to: caller\n      });\n    });\n    peer.on(\"stream\", stream => {\n      partnerVideo.current.srcObject = stream;\n    });\n    peer.signal(callerSignal);\n  }\n\n  let UserVideo;\n\n  if (stream) {\n    UserVideo = /*#__PURE__*/_jsxDEV(MainVideo, {\n      playsInline: true,\n      muted: true,\n      ref: userVideo,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this);\n  }\n\n  let PartnerVideo;\n\n  if (callAccepted) {\n    PartnerVideo = /*#__PURE__*/_jsxDEV(Video, {\n      playsInline: true,\n      ref: partnerVideo,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 20\n    }, this);\n  }\n\n  let incomingCall;\n  console.log(RTCPeerConnection.generateCertificate());\n\n  if (receivingCall) {\n    incomingCall = /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"noNeed\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD1B5\\uD654\\uB97C \\uC2DC\\uC791\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: acceptCall,\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deleteThis,\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: PartnerVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.keys(users).map(key => {\n          if (key === yourID) {\n            return null;\n          }\n\n          return callPeer(key);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: incomingCall\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContainer, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: UserVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Rtc, \"DYQVl/oY0iESlZfsNSeccEXSzak=\");\n\n_c6 = Rtc;\nexport default Rtc;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"MainContainer\");\n$RefreshReg$(_c3, \"MainVideo\");\n$RefreshReg$(_c4, \"Row\");\n$RefreshReg$(_c5, \"Video\");\n$RefreshReg$(_c6, \"Rtc\");","map":{"version":3,"sources":["C:/Users/82105/Desktop/22.01.07/Frontend/src/Rtc.js"],"names":["React","useEffect","useState","useRef","io","Peer","styled","Container","div","MainContainer","MainVideo","video","Row","Video","Rtc","yourID","setYourID","users","setUsers","stream","setStream","receivingCall","setReceivingCall","caller","setCaller","callerSignal","setCallerSignal","callAccepted","setCallAccepted","videoMember","setVideoMember","userVideo","partnerVideo","socket","current","connect","transports","navigator","mediaDevices","getUserMedia","audio","then","srcObject","on","id","data","from","signal","console","log","callPeer","peer","initiator","trickle","config","emit","userToCall","signalData","deleteThis","document","getElementById","remove","acceptCall","to","UserVideo","PartnerVideo","incomingCall","RTCPeerConnection","generateCertificate","Object","keys","map","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 30vh;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nconst MainContainer = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst MainVideo = styled.video`\r\n  border: 1px solid green;\r\n  width: 100vw;\r\n  height: 70vh;\r\n  text-align: center;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  text-align: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst Video = styled.video`\r\n  border: 1px solid blue;\r\n  width: 30%;\r\n  height: 100%;\r\n`;\r\n\r\nfunction Rtc() {\r\n  const [yourID, setYourID] = useState(\"\");\r\n  const [users, setUsers] = useState({});\r\n  const [stream, setStream] = useState();\r\n  const [receivingCall, setReceivingCall] = useState(false);\r\n  const [caller, setCaller] = useState(\"\");\r\n  const [callerSignal, setCallerSignal] = useState();\r\n  const [callAccepted, setCallAccepted] = useState(false);\r\n  const [videoMember, setVideoMember] = useState(0);\r\n\r\n  const userVideo = useRef();\r\n  const partnerVideo = useRef();\r\n  const socket = useRef();\r\n\r\n  useEffect(() => {\r\n    socket.current = io.connect(\"http://localhost:8000\", {\r\n      transports: [\"websocket\"],\r\n    });\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((stream) => {\r\n        setStream(stream);\r\n        if (userVideo.current) {\r\n          userVideo.current.srcObject = stream;\r\n        }\r\n      });\r\n\r\n    socket.current.on(\"yourID\", (id) => {\r\n      setYourID(id);\r\n    });\r\n    socket.current.on(\"allUsers\", (users) => {\r\n      setUsers(users);\r\n    });\r\n\r\n    socket.current.on(\"hey\", (data) => {\r\n      setReceivingCall(true);\r\n      setCaller(data.from);\r\n      setCallerSignal(data.signal);\r\n    });\r\n    console.log(socket.current.on(\"hey\"));\r\n  }, []);\r\n\r\n  function callPeer(id) {\r\n    if (videoMember === 0) {\r\n      const peer = new Peer({\r\n        initiator: true,\r\n        trickle: false,\r\n        config: {},\r\n        stream: stream,\r\n      });\r\n\r\n      peer.on(\"signal\", (data) => {\r\n        socket.current.emit(\"callUser\", {\r\n          userToCall: id,\r\n          signalData: data,\r\n          from: yourID,\r\n        });\r\n      });\r\n\r\n      peer.on(\"stream\", (stream) => {\r\n        if (partnerVideo.current) {\r\n          partnerVideo.current.srcObject = stream;\r\n        }\r\n      });\r\n\r\n      socket.current.on(\"callAccepted\", (signal) => {\r\n        setCallAccepted(true);\r\n        peer.signal(signal);\r\n      });\r\n    }\r\n  }\r\n\r\n  function deleteThis() {\r\n    const div = document.getElementById(\"noNeed\");\r\n    div.remove();\r\n  }\r\n\r\n  function acceptCall() {\r\n    setCallAccepted(true);\r\n    setVideoMember(videoMember + 1);\r\n    const div = document.getElementById(\"noNeed\");\r\n    div.remove();\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream: stream,\r\n    });\r\n    peer.on(\"signal\", (data) => {\r\n      socket.current.emit(\"acceptCall\", { signal: data, to: caller });\r\n    });\r\n\r\n    peer.on(\"stream\", (stream) => {\r\n      partnerVideo.current.srcObject = stream;\r\n    });\r\n\r\n    peer.signal(callerSignal);\r\n  }\r\n\r\n  let UserVideo;\r\n  if (stream) {\r\n    UserVideo = <MainVideo playsInline muted ref={userVideo} autoPlay />;\r\n  }\r\n\r\n  let PartnerVideo;\r\n  if (callAccepted) {\r\n    PartnerVideo = <Video playsInline ref={partnerVideo} autoPlay />;\r\n  }\r\n\r\n  let incomingCall;\r\n  console.log(RTCPeerConnection.generateCertificate());\r\n  if (receivingCall) {\r\n    incomingCall = (\r\n      <div id=\"noNeed\">\r\n        <h1>통화를 시작하시겠습니까?</h1>\r\n        <div>\r\n          <button onClick={acceptCall}>Yes</button>\r\n          <button onClick={deleteThis}>No</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row>{PartnerVideo}</Row>\r\n        <div>\r\n          {Object.keys(users).map((key) => {\r\n            if (key === yourID) {\r\n              return null;\r\n            }\r\n            return callPeer(key);\r\n          })}\r\n        </div>\r\n        <div>{incomingCall}</div>\r\n      </Container>\r\n      <MainContainer>\r\n        <Row>{UserVideo}</Row>\r\n      </MainContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Rtc;\r\n"]},"metadata":{},"sourceType":"module"}