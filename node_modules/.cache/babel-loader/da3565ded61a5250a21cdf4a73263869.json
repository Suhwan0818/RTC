{"ast":null,"code":"import produce from 'immer';\nconst ADD_ROOM = 'roomAndChannel/ADD_ROOM';\nconst SELECT_ROOM = 'roomAndChannel/SELECT_ROOM';\nconst ADD_CHANNEL = 'roomAndChannel/ADD_CHANNEL';\nconst SELECT_CHANNEL = 'roomAndChannel/SELECT_CHANNEL';\nexport const addRoom = roomName => ({\n  type: ADD_ROOM,\n  room: {\n    id: nextRoomId++,\n    name: roomName,\n    channels: []\n  }\n});\nexport const selectRoom = roomId => ({\n  type: SELECT_ROOM,\n  id: roomId\n});\nexport const addChannel = channelName => ({\n  type: ADD_CHANNEL,\n  channel: {\n    id: nextChannelId++,\n    name: channelName\n  }\n});\nexport const selectChannel = channelId => ({\n  type: SELECT_CHANNEL,\n  id: channelId\n});\nlet nextRoomId = 3;\nlet nextChannelId = 3;\nconst initialState = {\n  selectRoom: 0,\n  selectChannel: 0,\n  rooms: []\n};\nexport default function roomAndChannel() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_ROOM:\n      return { ...state,\n        rooms: state.rooms.concat(action.room)\n      };\n\n    case SELECT_ROOM:\n      return { ...state,\n        selectRoom: action.id,\n        selectChannel: 0\n      };\n\n    case ADD_CHANNEL:\n      return produce(state, draft => {\n        draft.rooms[state.selectRoom - 1].channels.push(action.channel);\n      });\n\n    case SELECT_CHANNEL:\n      return { ...state,\n        selectChannel: action.id\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/isangcheol/Desktop/project/nisl/nisl/src/Components/modules/roomAndChannel.js"],"names":["produce","ADD_ROOM","SELECT_ROOM","ADD_CHANNEL","SELECT_CHANNEL","addRoom","roomName","type","room","id","nextRoomId","name","channels","selectRoom","roomId","addChannel","channelName","channel","nextChannelId","selectChannel","channelId","initialState","rooms","roomAndChannel","state","action","concat","draft","push"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,MAAMC,QAAQ,GAAG,yBAAjB;AACA,MAAMC,WAAW,GAAG,4BAApB;AACA,MAAMC,WAAW,GAAG,4BAApB;AACA,MAAMC,cAAc,GAAG,+BAAvB;AAEA,OAAO,MAAMC,OAAO,GAAGC,QAAQ,KAAK;AAChCC,EAAAA,IAAI,EAAEN,QAD0B;AAEhCO,EAAAA,IAAI,EAAE;AACFC,IAAAA,EAAE,EAAEC,UAAU,EADZ;AAEFC,IAAAA,IAAI,EAAEL,QAFJ;AAGFM,IAAAA,QAAQ,EAAE;AAHR;AAF0B,CAAL,CAAxB;AASP,OAAO,MAAMC,UAAU,GAAGC,MAAM,KAAK;AACjCP,EAAAA,IAAI,EAAEL,WAD2B;AAEjCO,EAAAA,EAAE,EAAEK;AAF6B,CAAL,CAAzB;AAKP,OAAO,MAAMC,UAAU,GAAIC,WAAD,KAAkB;AACxCT,EAAAA,IAAI,EAAEJ,WADkC;AAExCc,EAAAA,OAAO,EAAE;AACLR,IAAAA,EAAE,EAAES,aAAa,EADZ;AAELP,IAAAA,IAAI,EAAEK;AAFD;AAF+B,CAAlB,CAAnB;AAQP,OAAO,MAAMG,aAAa,GAAGC,SAAS,KAAK;AACvCb,EAAAA,IAAI,EAAEH,cADiC;AAEvCK,EAAAA,EAAE,EAAEW;AAFmC,CAAL,CAA/B;AAKP,IAAIV,UAAU,GAAG,CAAjB;AACA,IAAIQ,aAAa,GAAG,CAApB;AAEA,MAAMG,YAAY,GAAG;AACjBR,EAAAA,UAAU,EAAE,CADK;AAEjBM,EAAAA,aAAa,EAAE,CAFE;AAGjBG,EAAAA,KAAK,EAAE;AAHU,CAArB;AAQA,eAAe,SAASC,cAAT,GAAsD;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AACjE,UAAQA,MAAM,CAAClB,IAAf;AACI,SAAKN,QAAL;AACI,aAAO,EAAE,GAAGuB,KAAL;AAAYF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYI,MAAZ,CAAmBD,MAAM,CAACjB,IAA1B;AAAnB,OAAP;;AACJ,SAAKN,WAAL;AACI,aAAO,EAAE,GAAGsB,KAAL;AAAYX,QAAAA,UAAU,EAAEY,MAAM,CAAChB,EAA/B;AAAmCU,QAAAA,aAAa,EAAE;AAAlD,OAAP;;AACJ,SAAKhB,WAAL;AACI,aAAOH,OAAO,CAACwB,KAAD,EAAQG,KAAK,IAAI;AAC3BA,QAAAA,KAAK,CAACL,KAAN,CAAYE,KAAK,CAACX,UAAN,GAAmB,CAA/B,EAAkCD,QAAlC,CAA2CgB,IAA3C,CAAgDH,MAAM,CAACR,OAAvD;AACH,OAFa,CAAd;;AAGJ,SAAKb,cAAL;AACI,aAAO,EAAE,GAAGoB,KAAL;AAAYL,QAAAA,aAAa,EAAEM,MAAM,CAAChB;AAAlC,OAAP;;AACJ;AACI,aAAOe,KAAP;AAZR;AAcH","sourcesContent":["import produce from 'immer';\n\nconst ADD_ROOM = 'roomAndChannel/ADD_ROOM';\nconst SELECT_ROOM = 'roomAndChannel/SELECT_ROOM';\nconst ADD_CHANNEL = 'roomAndChannel/ADD_CHANNEL';\nconst SELECT_CHANNEL = 'roomAndChannel/SELECT_CHANNEL';\n\nexport const addRoom = roomName => ({\n    type: ADD_ROOM,\n    room: {\n        id: nextRoomId++,\n        name: roomName,\n        channels: [],\n    },\n})\n\nexport const selectRoom = roomId => ({\n    type: SELECT_ROOM,\n    id: roomId,\n})\n\nexport const addChannel = (channelName) => ({\n    type: ADD_CHANNEL,\n    channel: {\n        id: nextChannelId++,\n        name: channelName,\n    }\n})\n\nexport const selectChannel = channelId => ({\n    type: SELECT_CHANNEL,\n    id: channelId,\n})\n\nlet nextRoomId = 3;\nlet nextChannelId = 3;\n\nconst initialState = {\n    selectRoom: 0,\n    selectChannel: 0,\n    rooms: [\n\n    ],\n};\n\nexport default function roomAndChannel(state = initialState, action) {\n    switch (action.type) {\n        case ADD_ROOM:\n            return { ...state, rooms: state.rooms.concat(action.room) };\n        case SELECT_ROOM:\n            return { ...state, selectRoom: action.id, selectChannel: 0 };\n        case ADD_CHANNEL:\n            return produce(state, draft => {\n                draft.rooms[state.selectRoom - 1].channels.push(action.channel);\n            })\n        case SELECT_CHANNEL:\n            return { ...state, selectChannel: action.id };\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}