{"ast":null,"code":"const ADD_ROOM = 'store/ADD_ROOM';\nexport const addRoom = roomName => ({\n  type: ADD_ROOM,\n  room: {\n    id: nextRoomId++,\n    name: roomName,\n    channels: []\n  }\n});\nlet nextRoomId = 3;\nconst initialState = {\n  selectRoom: 0,\n  selectChannel: 0,\n  rooms: [{\n    id: 1,\n    name: 'first room',\n    channels: [{\n      id: 1,\n      name: 'first channel'\n    }, {\n      id: 2,\n      name: 'second channel'\n    }]\n  }, {\n    id: 2,\n    name: 'second room',\n    channels: [{\n      id: 1,\n      name: 'first channel'\n    }, {\n      id: 2,\n      name: 'second channel'\n    }]\n  }]\n};\nexport default function roomAndChannel() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_ROOM:\n      return { ...state,\n        rooms: state.rooms.concat(action.room)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/isangcheol/Desktop/project/nisl/nisl/src/Components/modules/roomAndChannel.js"],"names":["ADD_ROOM","addRoom","roomName","type","room","id","nextRoomId","name","channels","initialState","selectRoom","selectChannel","rooms","roomAndChannel","state","action","concat"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,gBAAjB;AAEA,OAAO,MAAMC,OAAO,GAAGC,QAAQ,KAAK;AAChCC,EAAAA,IAAI,EAAEH,QAD0B;AAEhCI,EAAAA,IAAI,EAAE;AACFC,IAAAA,EAAE,EAAEC,UAAU,EADZ;AAEFC,IAAAA,IAAI,EAAEL,QAFJ;AAGFM,IAAAA,QAAQ,EAAE;AAHR;AAF0B,CAAL,CAAxB;AASP,IAAIF,UAAU,GAAG,CAAjB;AACA,MAAMG,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,CADK;AAEjBC,EAAAA,aAAa,EAAE,CAFE;AAGjBC,EAAAA,KAAK,EAAE,CACH;AACIP,IAAAA,EAAE,EAAE,CADR;AAEIE,IAAAA,IAAI,EAAE,YAFV;AAGIC,IAAAA,QAAQ,EAAE,CACN;AACIH,MAAAA,EAAE,EAAE,CADR;AAEIE,MAAAA,IAAI,EAAE;AAFV,KADM,EAKN;AACIF,MAAAA,EAAE,EAAE,CADR;AAEIE,MAAAA,IAAI,EAAE;AAFV,KALM;AAHd,GADG,EAeH;AACIF,IAAAA,EAAE,EAAE,CADR;AAEIE,IAAAA,IAAI,EAAE,aAFV;AAGIC,IAAAA,QAAQ,EAAE,CACN;AACIH,MAAAA,EAAE,EAAE,CADR;AAEIE,MAAAA,IAAI,EAAE;AAFV,KADM,EAKN;AACIF,MAAAA,EAAE,EAAE,CADR;AAEIE,MAAAA,IAAI,EAAE;AAFV,KALM;AAHd,GAfG;AAHU,CAArB;AAoCA,eAAe,SAASM,cAAT,GAAsD;AAAA,MAA9BC,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;;AACjE,UAAQA,MAAM,CAACZ,IAAf;AACI,SAAKH,QAAL;AACI,aAAO,EAAE,GAAGc,KAAL;AAAYF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYI,MAAZ,CAAmBD,MAAM,CAACX,IAA1B;AAAnB,OAAP;;AACJ;AACI,aAAOU,KAAP;AAJR;AAMH","sourcesContent":["const ADD_ROOM = 'store/ADD_ROOM';\n\nexport const addRoom = roomName => ({\n    type: ADD_ROOM,\n    room: {\n        id: nextRoomId++,\n        name: roomName,\n        channels: [],\n    },\n})\n\nlet nextRoomId = 3;\nconst initialState = {\n    selectRoom: 0,\n    selectChannel: 0,\n    rooms: [\n        {\n            id: 1,\n            name: 'first room',\n            channels: [\n                {\n                    id: 1,\n                    name: 'first channel'\n                },\n                {\n                    id: 2,\n                    name: 'second channel'\n                },\n            ]\n        },\n        {\n            id: 2,\n            name: 'second room',\n            channels: [\n                {\n                    id: 1,\n                    name: 'first channel'\n                },\n                {\n                    id: 2,\n                    name: 'second channel'\n                },\n            ]\n        },\n    ],\n\n};\n\nexport default function roomAndChannel(state = initialState, action) {\n    switch (action.type) {\n        case ADD_ROOM:\n            return { ...state, rooms: state.rooms.concat(action.room) };\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}