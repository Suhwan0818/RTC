{"ast":null,"code":"export const socketSubscribe = async (socket, dispatch) => {\n  socket.on('message', data => {\n    console.log(\"App.js Socket(receive chat) \", data); //dispatch(receiveChat(data));\n  });\n};\n\nconst mapStateToProps = state => {\n  console.log(\"containers/App.js mapStateToProps \", state);\n  return state;\n}; // const mapDispatchToProps = dispatch => {\n//     socketSubscribe(dispatch);\n//     return {\n//         enterChatroom: () => {\n//             socket.emit('enter chatroom');\n//         },\n//         leaveChatroom: () => {\n//             socket.emit('leave chatroom');\n//         },\n//         sendChat: (chat) => {\n//             socket.emit('send chat', { type: \"msg\", socketId: socket.id, chat: chat, regDate: Date.now() });\n//         },\n//         clearChat: () => {\n//             dispatch(action.clearChat());\n//         }\n//     };\n// }","map":{"version":3,"sources":["/Users/isangcheol/Desktop/project/nisl/nisl/src/Components/socket.js"],"names":["socketSubscribe","socket","dispatch","on","data","console","log","mapStateToProps","state"],"mappings":"AACA,OAAO,MAAMA,eAAe,GAAG,OAAOC,MAAP,EAAeC,QAAf,KAA4B;AACvDD,EAAAA,MAAM,CAACE,EAAP,CAAU,SAAV,EAAsBC,IAAD,IAAU;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,IAA5C,EAD2B,CAE3B;AACH,GAHD;AAIH,CALM;;AAOP,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC7BH,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDE,KAAlD;AACA,SAAOA,KAAP;AACH,CAHD,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nexport const socketSubscribe = async (socket, dispatch) => {\n    socket.on('message', (data) => {\n        console.log(\"App.js Socket(receive chat) \", data);\n        //dispatch(receiveChat(data));\n    });\n}\n\nconst mapStateToProps = state => {\n    console.log(\"containers/App.js mapStateToProps \", state);\n    return state;\n};\n\n// const mapDispatchToProps = dispatch => {\n//     socketSubscribe(dispatch);\n//     return {\n//         enterChatroom: () => {\n//             socket.emit('enter chatroom');\n//         },\n//         leaveChatroom: () => {\n//             socket.emit('leave chatroom');\n//         },\n//         sendChat: (chat) => {\n//             socket.emit('send chat', { type: \"msg\", socketId: socket.id, chat: chat, regDate: Date.now() });\n//         },\n//         clearChat: () => {\n//             dispatch(action.clearChat());\n//         }\n//     };\n// }\n"]},"metadata":{},"sourceType":"module"}