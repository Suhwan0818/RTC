{"ast":null,"code":"var _jsxFileName = \"/Users/isangcheol/Desktop/project/nisl/nisl/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Login from \"./Login\";\nimport io from \"socket.io-client\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { initSocket } from \"./Components/modules/roomAndChannel\";\nimport { receiveChat } from \"./Components/modules/roomAndChannel\"; // const socket = io.connect(\"http://localhost:80\");\n// socket.emit(\"message\", {\n//   channel_name: 'first channel',\n//   room_name: 'first room',\n//   user_name: 'sangchovy',\n//   content: 'hello',\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:80\");\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const store = useSelector(state => state);\n  useEffect(() => {\n    socket.on('message', function (data) {\n      console.log(\"App.js Socket(receive chat) \", data);\n      dispatch(receiveChat(data));\n    });\n    dispatch(initSocket(socket));\n    let sendingRoom = [];\n    store.rooms.map(room => room.channels.map(channel => {\n      console.log(room.name);\n      console.log(channel.name);\n      sendingRoom.push({\n        channel_name: room.name,\n        room_name: channel.name\n      });\n    }));\n    socket.emit(\"join\", sendingRoom);\n    console.log(sendingRoom);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RjwF01zgQ2AveE3OtqlFhuHO0lw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/isangcheol/Desktop/project/nisl/nisl/src/App.js"],"names":["Login","io","useEffect","useDispatch","useSelector","initSocket","receiveChat","socket","connect","App","dispatch","store","state","on","data","console","log","sendingRoom","rooms","map","room","channels","channel","name","push","channel_name","room_name","emit"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,qCAA3B;AACA,SAASC,WAAT,QAA4B,qCAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,MAAM,GAAGN,EAAE,CAACO,OAAH,CAAW,qBAAX,CAAf;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,KAAK,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAV,CAAzB;AACAV,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,CAACM,EAAP,CAAU,SAAV,EAAqB,UAAUC,IAAV,EAAgB;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,IAA5C;AACAJ,MAAAA,QAAQ,CAACJ,WAAW,CAACQ,IAAD,CAAZ,CAAR;AACD,KAHD;AAIAJ,IAAAA,QAAQ,CAACL,UAAU,CAACE,MAAD,CAAX,CAAR;AAEA,QAAIU,WAAW,GAAG,EAAlB;AAEAN,IAAAA,KAAK,CAACO,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IAAIA,IAAI,CAACC,QAAL,CAAcF,GAAd,CAAkBG,OAAO,IAAI;AACnDP,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAI,CAACG,IAAjB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYM,OAAO,CAACC,IAApB;AACAN,MAAAA,WAAW,CAACO,IAAZ,CAAiB;AACfC,QAAAA,YAAY,EAAEL,IAAI,CAACG,IADJ;AAEfG,QAAAA,SAAS,EAAEJ,OAAO,CAACC;AAFJ,OAAjB;AAKD,KARuB,CAAxB;AASAhB,IAAAA,MAAM,CAACoB,IAAP,CAAY,MAAZ,EAAoBV,WAApB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AACD,GApBQ,EAoBN,EApBM,CAAT;AAsBA,sBACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GA5BQR,G;UACUN,W,EACHC,W;;;KAFPK,G;AA8BT,eAAeA,GAAf","sourcesContent":["import Login from \"./Login\";\nimport io from \"socket.io-client\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { initSocket } from \"./Components/modules/roomAndChannel\";\nimport { receiveChat } from \"./Components/modules/roomAndChannel\";\n\n// const socket = io.connect(\"http://localhost:80\");\n// socket.emit(\"message\", {\n//   channel_name: 'first channel',\n//   room_name: 'first room',\n//   user_name: 'sangchovy',\n//   content: 'hello',\n// });\n\nconst socket = io.connect(\"http://localhost:80\");\n\nfunction App() {\n  const dispatch = useDispatch();\n  const store = useSelector(state => state);\n  useEffect(() => {\n    socket.on('message', function (data) {\n      console.log(\"App.js Socket(receive chat) \", data);\n      dispatch(receiveChat(data));\n    });\n    dispatch(initSocket(socket));\n\n    let sendingRoom = [];\n\n    store.rooms.map(room => room.channels.map(channel => {\n      console.log(room.name);\n      console.log(channel.name);\n      sendingRoom.push({\n        channel_name: room.name,\n        room_name: channel.name,\n      });\n\n    }))\n    socket.emit(\"join\", sendingRoom)\n    console.log(sendingRoom);\n  }, [])\n\n  return (\n    <Login />\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}