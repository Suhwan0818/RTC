{"ast":null,"code":"var _jsxFileName = \"/Users/isangcheol/Desktop/project/nisl/nisl/src/Components/Container/FoldingChannels.js\";\nimport { Accordion } from \"react-bootstrap\";\nimport styled from \"styled-components\"; // const FoldingChannels = () => {\n//     return (\n//         <Accordion defaultActiveKey=\"0\">\n//             <Accordion.Item eventKey=\"0\">\n//                 <Accordion.Header>Accordion Item #1</Accordion.Header>\n//                 <Accordion.Body>\n//                     Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n//                     tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n//                     veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n//                     commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\n//                     velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\n//                     cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\n//                     est laborum.\n//                 </Accordion.Body>\n//             </Accordion.Item>\n//             <Accordion.Item eventKey=\"1\">\n//                 <Accordion.Header>Accordion Item #2</Accordion.Header>\n//                 <Accordion.Body>\n//                     Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n//                     tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n//                     veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n//                     commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\n//                     velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\n//                     cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\n//                     est laborum.\n//                 </Accordion.Body>\n//             </Accordion.Item>\n//         </Accordion>\n//     )\n// }\n//export default FoldingChannels;\n\nimport { Tree, Input } from 'antd';\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input;\nconst x = 3;\nconst y = 2;\nconst z = 1;\nconst gData = [];\n\nconst generateData = (_level, _preKey, _tns) => {\n  const preKey = _preKey || '0';\n  const tns = _tns || gData;\n  const children = [];\n\n  for (let i = 0; i < x; i++) {\n    const key = `${preKey}-${i}`;\n    tns.push({\n      title: key,\n      key\n    });\n\n    if (i < y) {\n      children.push(key);\n    }\n  }\n\n  if (_level < 0) {\n    return tns;\n  }\n\n  const level = _level - 1;\n  children.forEach((key, index) => {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\n\ngenerateData(z);\nconst dataList = [];\n\nconst generateList = data => {\n  for (let i = 0; i < data.length; i++) {\n    const node = data[i];\n    const {\n      key\n    } = node;\n    dataList.push({\n      key,\n      title: key\n    });\n\n    if (node.children) {\n      generateList(node.children);\n    }\n  }\n};\n\ngenerateList(gData);\n\nconst getParentKey = (key, tree) => {\n  let parentKey;\n\n  for (let i = 0; i < tree.length; i++) {\n    const node = tree[i];\n\n    if (node.children) {\n      if (node.children.some(item => item.key === key)) {\n        parentKey = node.key;\n      } else if (getParentKey(key, node.children)) {\n        parentKey = getParentKey(key, node.children);\n      }\n    }\n  }\n\n  return parentKey;\n};\n\nclass FoldingChannels extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      expandedKeys: [],\n      searchValue: '',\n      autoExpandParent: true\n    };\n\n    this.onExpand = expandedKeys => {\n      this.setState({\n        expandedKeys,\n        autoExpandParent: false\n      });\n    };\n\n    this.onChange = e => {\n      const {\n        value\n      } = e.target;\n      const expandedKeys = dataList.map(item => {\n        if (item.title.indexOf(value) > -1) {\n          return getParentKey(item.key, gData);\n        }\n\n        return null;\n      }).filter((item, i, self) => item && self.indexOf(item) === i);\n      this.setState({\n        expandedKeys,\n        searchValue: value,\n        autoExpandParent: true\n      });\n    };\n  }\n\n  render() {\n    const {\n      searchValue,\n      expandedKeys,\n      autoExpandParent\n    } = this.state;\n\n    const loop = data => data.map(item => {\n      const index = item.title.indexOf(searchValue);\n      const beforeStr = item.title.substr(0, index);\n      const afterStr = item.title.substr(index + searchValue.length);\n      const title = index > -1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [beforeStr, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"site-tree-search-value\",\n          children: searchValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }, this), afterStr]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }, this);\n\n      if (item.children) {\n        return {\n          title,\n          key: item.key,\n          children: loop(item.children)\n        };\n      }\n\n      return {\n        title,\n        key: item.key\n      };\n    });\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        style: {\n          marginBottom: 8\n        },\n        placeholder: \"Search\",\n        onChange: this.onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tree, {\n        onExpand: this.onExpand,\n        expandedKeys: expandedKeys,\n        autoExpandParent: autoExpandParent,\n        treeData: loop(gData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FoldingChannels;","map":{"version":3,"sources":["/Users/isangcheol/Desktop/project/nisl/nisl/src/Components/Container/FoldingChannels.js"],"names":["Accordion","styled","Tree","Input","React","Search","x","y","z","gData","generateData","_level","_preKey","_tns","preKey","tns","children","i","key","push","title","level","forEach","index","dataList","generateList","data","length","node","getParentKey","tree","parentKey","some","item","FoldingChannels","Component","state","expandedKeys","searchValue","autoExpandParent","onExpand","setState","onChange","e","value","target","map","indexOf","filter","self","render","loop","beforeStr","substr","afterStr","marginBottom"],"mappings":"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","sourcesContent":["import { Accordion } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\n// const FoldingChannels = () => {\n//     return (\n//         <Accordion defaultActiveKey=\"0\">\n//             <Accordion.Item eventKey=\"0\">\n//                 <Accordion.Header>Accordion Item #1</Accordion.Header>\n//                 <Accordion.Body>\n//                     Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n//                     tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n//                     veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n//                     commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\n//                     velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\n//                     cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\n//                     est laborum.\n//                 </Accordion.Body>\n//             </Accordion.Item>\n//             <Accordion.Item eventKey=\"1\">\n//                 <Accordion.Header>Accordion Item #2</Accordion.Header>\n//                 <Accordion.Body>\n//                     Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n//                     tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n//                     veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n//                     commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\n//                     velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\n//                     cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\n//                     est laborum.\n//                 </Accordion.Body>\n//             </Accordion.Item>\n//         </Accordion>\n//     )\n// }\n\n//export default FoldingChannels;\n\nimport { Tree, Input } from 'antd';\nimport React from \"react\";\n\nconst { Search } = Input;\n\nconst x = 3;\nconst y = 2;\nconst z = 1;\nconst gData = [];\n\nconst generateData = (_level, _preKey, _tns) => {\n    const preKey = _preKey || '0';\n    const tns = _tns || gData;\n\n    const children = [];\n    for (let i = 0; i < x; i++) {\n        const key = `${preKey}-${i}`;\n        tns.push({ title: key, key });\n        if (i < y) {\n            children.push(key);\n        }\n    }\n    if (_level < 0) {\n        return tns;\n    }\n    const level = _level - 1;\n    children.forEach((key, index) => {\n        tns[index].children = [];\n        return generateData(level, key, tns[index].children);\n    });\n};\ngenerateData(z);\n\nconst dataList = [];\nconst generateList = data => {\n    for (let i = 0; i < data.length; i++) {\n        const node = data[i];\n        const { key } = node;\n        dataList.push({ key, title: key });\n        if (node.children) {\n            generateList(node.children);\n        }\n    }\n};\ngenerateList(gData);\n\nconst getParentKey = (key, tree) => {\n    let parentKey;\n    for (let i = 0; i < tree.length; i++) {\n        const node = tree[i];\n        if (node.children) {\n            if (node.children.some(item => item.key === key)) {\n                parentKey = node.key;\n            } else if (getParentKey(key, node.children)) {\n                parentKey = getParentKey(key, node.children);\n            }\n        }\n    }\n    return parentKey;\n};\n\nclass FoldingChannels extends React.Component {\n    state = {\n        expandedKeys: [],\n        searchValue: '',\n        autoExpandParent: true,\n    };\n\n    onExpand = expandedKeys => {\n        this.setState({\n            expandedKeys,\n            autoExpandParent: false,\n        });\n    };\n\n    onChange = e => {\n        const { value } = e.target;\n        const expandedKeys = dataList\n            .map(item => {\n                if (item.title.indexOf(value) > -1) {\n                    return getParentKey(item.key, gData);\n                }\n                return null;\n            })\n            .filter((item, i, self) => item && self.indexOf(item) === i);\n        this.setState({\n            expandedKeys,\n            searchValue: value,\n            autoExpandParent: true,\n        });\n    };\n\n    render() {\n        const { searchValue, expandedKeys, autoExpandParent } = this.state;\n        const loop = data =>\n            data.map(item => {\n                const index = item.title.indexOf(searchValue);\n                const beforeStr = item.title.substr(0, index);\n                const afterStr = item.title.substr(index + searchValue.length);\n                const title =\n                    index > -1 ? (\n                        <span>\n                            {beforeStr}\n                            <span className=\"site-tree-search-value\">{searchValue}</span>\n                            {afterStr}\n                        </span>\n                    ) : (\n                        <span>{item.title}</span>\n                    );\n                if (item.children) {\n                    return { title, key: item.key, children: loop(item.children) };\n                }\n\n                return {\n                    title,\n                    key: item.key,\n                };\n            });\n        return (\n            <div>\n                <Search style={{ marginBottom: 8 }} placeholder=\"Search\" onChange={this.onChange} />\n                <Tree\n                    onExpand={this.onExpand}\n                    expandedKeys={expandedKeys}\n                    autoExpandParent={autoExpandParent}\n                    treeData={loop(gData)}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FoldingChannels;"]},"metadata":{},"sourceType":"module"}