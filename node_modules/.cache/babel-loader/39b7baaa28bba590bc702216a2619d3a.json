{"ast":null,"code":"import produce from 'immer';\nconst INIT_SOCKET = 'roomAndChannel/INIT_SOCKET';\nconst ADD_ROOM = 'roomAndChannel/ADD_ROOM';\nconst SELECT_ROOM = 'roomAndChannel/SELECT_ROOM';\nconst ADD_CHANNEL = 'roomAndChannel/ADD_CHANNEL';\nconst SELECT_CHANNEL = 'roomAndChannel/SELECT_CHANNEL';\nexport const initSocket = socket => ({\n  type: INIT_SOCKET,\n  socket: socket\n});\nexport const addRoom = roomName => ({\n  type: ADD_ROOM,\n  room: {\n    id: nextRoomId++,\n    name: roomName,\n    channels: []\n  }\n});\nexport const selectRoom = roomId => ({\n  type: SELECT_ROOM,\n  id: roomId\n});\nexport const addChannel = (id, channelName) => ({\n  type: ADD_CHANNEL,\n  channel: {\n    id: id,\n    name: channelName,\n    chat: []\n  }\n});\nexport const selectChannel = channelId => ({\n  type: SELECT_CHANNEL,\n  id: channelId\n});\nlet nextRoomId = 1;\nconst initialState = {\n  socket: null,\n  myid: 5469775,\n  selectRoom: 0,\n  selectChannel: 0,\n  rooms: [{\n    id: 1,\n    name: 'first room',\n    channels: [{\n      id: 1,\n      name: '1-1 channel',\n      chat: []\n    }, {\n      id: 2,\n      name: '1-2 channel',\n      chat: [{\n        id: 5555555,\n        name: '김수환',\n        time: '4:22 PM',\n        content: '안녕하세요 여러분~!'\n      }, {\n        id: 5469775,\n        name: '이상철',\n        time: '5:34 AM',\n        content: '방가방가 여러분~!'\n      }, {\n        id: 6666666,\n        name: '병률짱',\n        time: '0:00 AM',\n        content: '에취!'\n      }]\n    }]\n  }, {\n    id: 2,\n    name: 'second room',\n    channels: [{\n      id: 1,\n      name: '2-1 channel',\n      chat: []\n    }, {\n      id: 2,\n      name: '2-2 channel',\n      chat: []\n    }]\n  }]\n};\nexport default function roomAndChannel() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INIT_SOCKET:\n      return { ...state,\n        socket: action.socket\n      };\n\n    case ADD_ROOM:\n      return { ...state,\n        rooms: state.rooms.concat(action.room)\n      };\n\n    case SELECT_ROOM:\n      return { ...state,\n        selectRoom: action.id,\n        selectChannel: 0\n      };\n\n    case ADD_CHANNEL:\n      return produce(state, draft => {\n        draft.rooms[state.selectRoom - 1].channels.push(action.channel);\n      });\n\n    case SELECT_CHANNEL:\n      return { ...state,\n        selectChannel: action.id\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/isangcheol/Desktop/project/nisl/nisl/src/Components/modules/roomAndChannel.js"],"names":["produce","INIT_SOCKET","ADD_ROOM","SELECT_ROOM","ADD_CHANNEL","SELECT_CHANNEL","initSocket","socket","type","addRoom","roomName","room","id","nextRoomId","name","channels","selectRoom","roomId","addChannel","channelName","channel","chat","selectChannel","channelId","initialState","myid","rooms","time","content","roomAndChannel","state","action","concat","draft","push"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,MAAMC,WAAW,GAAG,4BAApB;AACA,MAAMC,QAAQ,GAAG,yBAAjB;AACA,MAAMC,WAAW,GAAG,4BAApB;AACA,MAAMC,WAAW,GAAG,4BAApB;AACA,MAAMC,cAAc,GAAG,+BAAvB;AAEA,OAAO,MAAMC,UAAU,GAAGC,MAAM,KAAK;AACjCC,EAAAA,IAAI,EAAEP,WAD2B;AAEjCM,EAAAA,MAAM,EAAEA;AAFyB,CAAL,CAAzB;AAKP,OAAO,MAAME,OAAO,GAAGC,QAAQ,KAAK;AAChCF,EAAAA,IAAI,EAAEN,QAD0B;AAEhCS,EAAAA,IAAI,EAAE;AACFC,IAAAA,EAAE,EAAEC,UAAU,EADZ;AAEFC,IAAAA,IAAI,EAAEJ,QAFJ;AAGFK,IAAAA,QAAQ,EAAE;AAHR;AAF0B,CAAL,CAAxB;AASP,OAAO,MAAMC,UAAU,GAAGC,MAAM,KAAK;AACjCT,EAAAA,IAAI,EAAEL,WAD2B;AAEjCS,EAAAA,EAAE,EAAEK;AAF6B,CAAL,CAAzB;AAKP,OAAO,MAAMC,UAAU,GAAG,CAACN,EAAD,EAAKO,WAAL,MAAsB;AAC5CX,EAAAA,IAAI,EAAEJ,WADsC;AAE5CgB,EAAAA,OAAO,EAAE;AACLR,IAAAA,EAAE,EAAEA,EADC;AAELE,IAAAA,IAAI,EAAEK,WAFD;AAGLE,IAAAA,IAAI,EAAE;AAHD;AAFmC,CAAtB,CAAnB;AAWP,OAAO,MAAMC,aAAa,GAAGC,SAAS,KAAK;AACvCf,EAAAA,IAAI,EAAEH,cADiC;AAEvCO,EAAAA,EAAE,EAAEW;AAFmC,CAAL,CAA/B;AAKP,IAAIV,UAAU,GAAG,CAAjB;AAEA,MAAMW,YAAY,GAAG;AACjBjB,EAAAA,MAAM,EAAE,IADS;AAEjBkB,EAAAA,IAAI,EAAE,OAFW;AAGjBT,EAAAA,UAAU,EAAE,CAHK;AAIjBM,EAAAA,aAAa,EAAE,CAJE;AAKjBI,EAAAA,KAAK,EAAE,CACH;AACId,IAAAA,EAAE,EAAE,CADR;AAEIE,IAAAA,IAAI,EAAE,YAFV;AAGIC,IAAAA,QAAQ,EAAE,CACN;AACIH,MAAAA,EAAE,EAAE,CADR;AAEIE,MAAAA,IAAI,EAAE,aAFV;AAGIO,MAAAA,IAAI,EAAE;AAHV,KADM,EAQN;AACIT,MAAAA,EAAE,EAAE,CADR;AAEIE,MAAAA,IAAI,EAAE,aAFV;AAGIO,MAAAA,IAAI,EAAE,CACF;AACIT,QAAAA,EAAE,EAAE,OADR;AAEIE,QAAAA,IAAI,EAAE,KAFV;AAGIa,QAAAA,IAAI,EAAE,SAHV;AAIIC,QAAAA,OAAO,EAAE;AAJb,OADE,EAOF;AACIhB,QAAAA,EAAE,EAAE,OADR;AAEIE,QAAAA,IAAI,EAAE,KAFV;AAGIa,QAAAA,IAAI,EAAE,SAHV;AAIIC,QAAAA,OAAO,EAAE;AAJb,OAPE,EAaF;AACIhB,QAAAA,EAAE,EAAE,OADR;AAEIE,QAAAA,IAAI,EAAE,KAFV;AAGIa,QAAAA,IAAI,EAAE,SAHV;AAIIC,QAAAA,OAAO,EAAE;AAJb,OAbE;AAHV,KARM;AAHd,GADG,EAsCH;AACIhB,IAAAA,EAAE,EAAE,CADR;AAEIE,IAAAA,IAAI,EAAE,aAFV;AAGIC,IAAAA,QAAQ,EAAE,CACN;AACIH,MAAAA,EAAE,EAAE,CADR;AAEIE,MAAAA,IAAI,EAAE,aAFV;AAGIO,MAAAA,IAAI,EAAE;AAHV,KADM,EAMN;AACIT,MAAAA,EAAE,EAAE,CADR;AAEIE,MAAAA,IAAI,EAAE,aAFV;AAGIO,MAAAA,IAAI,EAAE;AAHV,KANM;AAHd,GAtCG;AALU,CAArB;AA8DA,eAAe,SAASQ,cAAT,GAAsD;AAAA,MAA9BC,KAA8B,uEAAtBN,YAAsB;AAAA,MAARO,MAAQ;;AACjE,UAAQA,MAAM,CAACvB,IAAf;AACI,SAAKP,WAAL;AACI,aAAO,EAAE,GAAG6B,KAAL;AAAYvB,QAAAA,MAAM,EAAEwB,MAAM,CAACxB;AAA3B,OAAP;;AACJ,SAAKL,QAAL;AACI,aAAO,EAAE,GAAG4B,KAAL;AAAYJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYM,MAAZ,CAAmBD,MAAM,CAACpB,IAA1B;AAAnB,OAAP;;AACJ,SAAKR,WAAL;AACI,aAAO,EAAE,GAAG2B,KAAL;AAAYd,QAAAA,UAAU,EAAEe,MAAM,CAACnB,EAA/B;AAAmCU,QAAAA,aAAa,EAAE;AAAlD,OAAP;;AACJ,SAAKlB,WAAL;AACI,aAAOJ,OAAO,CAAC8B,KAAD,EAAQG,KAAK,IAAI;AAC3BA,QAAAA,KAAK,CAACP,KAAN,CAAYI,KAAK,CAACd,UAAN,GAAmB,CAA/B,EAAkCD,QAAlC,CAA2CmB,IAA3C,CAAgDH,MAAM,CAACX,OAAvD;AACH,OAFa,CAAd;;AAGJ,SAAKf,cAAL;AACI,aAAO,EAAE,GAAGyB,KAAL;AAAYR,QAAAA,aAAa,EAAES,MAAM,CAACnB;AAAlC,OAAP;;AACJ;AACI,aAAOkB,KAAP;AAdR;AAgBH","sourcesContent":["import produce from 'immer';\n\nconst INIT_SOCKET = 'roomAndChannel/INIT_SOCKET';\nconst ADD_ROOM = 'roomAndChannel/ADD_ROOM';\nconst SELECT_ROOM = 'roomAndChannel/SELECT_ROOM';\nconst ADD_CHANNEL = 'roomAndChannel/ADD_CHANNEL';\nconst SELECT_CHANNEL = 'roomAndChannel/SELECT_CHANNEL';\n\nexport const initSocket = socket => ({\n    type: INIT_SOCKET,\n    socket: socket,\n})\n\nexport const addRoom = roomName => ({\n    type: ADD_ROOM,\n    room: {\n        id: nextRoomId++,\n        name: roomName,\n        channels: [],\n    },\n})\n\nexport const selectRoom = roomId => ({\n    type: SELECT_ROOM,\n    id: roomId,\n})\n\nexport const addChannel = (id, channelName) => ({\n    type: ADD_CHANNEL,\n    channel: {\n        id: id,\n        name: channelName,\n        chat: [\n\n        ]\n    }\n})\n\nexport const selectChannel = channelId => ({\n    type: SELECT_CHANNEL,\n    id: channelId,\n})\n\nlet nextRoomId = 1;\n\nconst initialState = {\n    socket: null,\n    myid: 5469775,\n    selectRoom: 0,\n    selectChannel: 0,\n    rooms: [\n        {\n            id: 1,\n            name: 'first room',\n            channels: [\n                {\n                    id: 1,\n                    name: '1-1 channel',\n                    chat: [\n\n                    ]\n                },\n                {\n                    id: 2,\n                    name: '1-2 channel',\n                    chat: [\n                        {\n                            id: 5555555,\n                            name: '김수환',\n                            time: '4:22 PM',\n                            content: '안녕하세요 여러분~!'\n                        },\n                        {\n                            id: 5469775,\n                            name: '이상철',\n                            time: '5:34 AM',\n                            content: '방가방가 여러분~!'\n                        },\n                        {\n                            id: 6666666,\n                            name: '병률짱',\n                            time: '0:00 AM',\n                            content: '에취!'\n                        },\n                    ]\n                },\n            ]\n        },\n        {\n            id: 2,\n            name: 'second room',\n            channels: [\n                {\n                    id: 1,\n                    name: '2-1 channel',\n                    chat: []\n                },\n                {\n                    id: 2,\n                    name: '2-2 channel',\n                    chat: []\n                },\n            ]\n        },\n    ],\n};\n\nexport default function roomAndChannel(state = initialState, action) {\n    switch (action.type) {\n        case INIT_SOCKET:\n            return { ...state, socket: action.socket }\n        case ADD_ROOM:\n            return { ...state, rooms: state.rooms.concat(action.room) };\n        case SELECT_ROOM:\n            return { ...state, selectRoom: action.id, selectChannel: 0 };\n        case ADD_CHANNEL:\n            return produce(state, draft => {\n                draft.rooms[state.selectRoom - 1].channels.push(action.channel);\n            })\n        case SELECT_CHANNEL:\n            return { ...state, selectChannel: action.id };\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}