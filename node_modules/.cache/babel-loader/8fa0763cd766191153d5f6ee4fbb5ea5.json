{"ast":null,"code":"import produce from 'immer';\nconst INIT_SOCKET = 'roomAndChannel/INIT_SOCKET';\nconst SET_MYID = 'roomAndChannel/SET_MYID';\nconst ADD_ROOM = 'roomAndChannel/ADD_ROOM';\nconst SELECT_ROOM = 'roomAndChannel/SELECT_ROOM';\nconst ADD_CHANNEL = 'roomAndChannel/ADD_CHANNEL';\nconst SELECT_CHANNEL = 'roomAndChannel/SELECT_CHANNEL';\nconst RECEIVE_CHAT = 'roomAndChannel/RECEIVECHAT';\nexport const initSocket = socket => ({\n  type: INIT_SOCKET,\n  socket: socket\n});\nexport const setMyid = id => ({\n  type: SET_MYID,\n  id: id\n});\nexport const addRoom = roomName => ({\n  type: ADD_ROOM,\n  room: {\n    id: nextRoomId++,\n    name: roomName,\n    channels: []\n  }\n});\nexport const selectRoom = roomId => ({\n  type: SELECT_ROOM,\n  id: roomId\n});\nexport const addChannel = (id, channelName) => ({\n  type: ADD_CHANNEL,\n  channel: {\n    id: id,\n    name: channelName,\n    chat: []\n  }\n});\nexport const selectChannel = channelId => ({\n  type: SELECT_CHANNEL,\n  id: channelId\n});\nexport const receiveChat = chat => ({\n  type: RECEIVE_CHAT,\n  chat: chat\n});\nlet nextRoomId = 1;\nconst initialState = {\n  socket: null,\n  myid: 5469775,\n  selectRoom: 0,\n  selectChannel: 0,\n  rooms: [{\n    id: 1,\n    name: 'first room',\n    channels: [{\n      id: 1,\n      name: '1-1 channel',\n      chat: []\n    }, {\n      id: 2,\n      name: '1-2 channel',\n      chat: [// {\n        //     id: 5555555,\n        //     name: '김수환',\n        //     time: '4:22 PM',\n        //     content: '안녕하세요 여러분~!'\n        // },\n        // {\n        //     id: 5469775,\n        //     name: '이상철',\n        //     time: '5:34 AM',\n        //     content: '방가방가 여러분~!'\n        // },\n        // {\n        //     id: 6666666,\n        //     name: '병률짱',\n        //     time: '0:00 AM',\n        //     content: '에취!'\n        // },\n      ]\n    }]\n  }, {\n    id: 2,\n    name: 'second room',\n    channels: [{\n      id: 1,\n      name: '2-1 channel',\n      chat: []\n    }, {\n      id: 2,\n      name: '2-2 channel',\n      chat: []\n    }]\n  }]\n};\nexport default function roomAndChannel() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INIT_SOCKET:\n      return { ...state,\n        socket: action.socket\n      };\n\n    case SET_MYID:\n      return { ...state,\n        myid: action.id\n      };\n\n    case ADD_ROOM:\n      return { ...state,\n        rooms: state.rooms.concat(action.room)\n      };\n\n    case SELECT_ROOM:\n      return { ...state,\n        selectRoom: action.id,\n        selectChannel: 0\n      };\n\n    case ADD_CHANNEL:\n      return produce(state, draft => {\n        draft.rooms[state.selectRoom - 1].channels.push(action.channel);\n      });\n\n    case SELECT_CHANNEL:\n      return { ...state,\n        selectChannel: action.id\n      };\n\n    case RECEIVE_CHAT:\n      let room;\n      let channel;\n      state.rooms.map();\n      return produce(state, draft => {\n        draft.rooms[state.selectRoom - 1].channels.push(action.channel);\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/isangcheol/Desktop/project/nisl/nisl/src/Components/modules/roomAndChannel.js"],"names":["produce","INIT_SOCKET","SET_MYID","ADD_ROOM","SELECT_ROOM","ADD_CHANNEL","SELECT_CHANNEL","RECEIVE_CHAT","initSocket","socket","type","setMyid","id","addRoom","roomName","room","nextRoomId","name","channels","selectRoom","roomId","addChannel","channelName","channel","chat","selectChannel","channelId","receiveChat","initialState","myid","rooms","roomAndChannel","state","action","concat","draft","push","map"],"mappings":"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","sourcesContent":["import produce from 'immer';\n\nconst INIT_SOCKET = 'roomAndChannel/INIT_SOCKET';\nconst SET_MYID = 'roomAndChannel/SET_MYID';\nconst ADD_ROOM = 'roomAndChannel/ADD_ROOM';\nconst SELECT_ROOM = 'roomAndChannel/SELECT_ROOM';\nconst ADD_CHANNEL = 'roomAndChannel/ADD_CHANNEL';\nconst SELECT_CHANNEL = 'roomAndChannel/SELECT_CHANNEL';\nconst RECEIVE_CHAT = 'roomAndChannel/RECEIVECHAT';\n\nexport const initSocket = socket => ({\n    type: INIT_SOCKET,\n    socket: socket,\n})\n\nexport const setMyid = id => ({\n    type: SET_MYID,\n    id: id,\n})\nexport const addRoom = roomName => ({\n    type: ADD_ROOM,\n    room: {\n        id: nextRoomId++,\n        name: roomName,\n        channels: [],\n    },\n})\n\nexport const selectRoom = roomId => ({\n    type: SELECT_ROOM,\n    id: roomId,\n})\n\nexport const addChannel = (id, channelName) => ({\n    type: ADD_CHANNEL,\n    channel: {\n        id: id,\n        name: channelName,\n        chat: [\n\n        ]\n    }\n})\n\nexport const selectChannel = channelId => ({\n    type: SELECT_CHANNEL,\n    id: channelId,\n})\n\nexport const receiveChat = chat => ({\n    type: RECEIVE_CHAT,\n    chat: chat,\n})\n\nlet nextRoomId = 1;\n\nconst initialState = {\n    socket: null,\n    myid: 5469775,\n    selectRoom: 0,\n    selectChannel: 0,\n    rooms: [\n        {\n            id: 1,\n            name: 'first room',\n            channels: [\n                {\n                    id: 1,\n                    name: '1-1 channel',\n                    chat: [\n\n                    ]\n                },\n                {\n                    id: 2,\n                    name: '1-2 channel',\n                    chat: [\n                        // {\n                        //     id: 5555555,\n                        //     name: '김수환',\n                        //     time: '4:22 PM',\n                        //     content: '안녕하세요 여러분~!'\n                        // },\n                        // {\n                        //     id: 5469775,\n                        //     name: '이상철',\n                        //     time: '5:34 AM',\n                        //     content: '방가방가 여러분~!'\n                        // },\n                        // {\n                        //     id: 6666666,\n                        //     name: '병률짱',\n                        //     time: '0:00 AM',\n                        //     content: '에취!'\n                        // },\n                    ]\n                },\n            ]\n        },\n        {\n            id: 2,\n            name: 'second room',\n            channels: [\n                {\n                    id: 1,\n                    name: '2-1 channel',\n                    chat: []\n                },\n                {\n                    id: 2,\n                    name: '2-2 channel',\n                    chat: []\n                },\n            ]\n        },\n    ],\n};\n\nexport default function roomAndChannel(state = initialState, action) {\n    switch (action.type) {\n        case INIT_SOCKET:\n            return { ...state, socket: action.socket }\n        case SET_MYID:\n            return { ...state, myid: action.id }\n        case ADD_ROOM:\n            return { ...state, rooms: state.rooms.concat(action.room) };\n        case SELECT_ROOM:\n            return { ...state, selectRoom: action.id, selectChannel: 0 };\n        case ADD_CHANNEL:\n            return produce(state, draft => {\n                draft.rooms[state.selectRoom - 1].channels.push(action.channel);\n            })\n        case SELECT_CHANNEL:\n            return { ...state, selectChannel: action.id };\n        case RECEIVE_CHAT:\n            let room;\n            let channel;\n            state.rooms.map()\n            return produce(state, draft => {\n                draft.rooms[state.selectRoom - 1].channels.push(action.channel);\n            })\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}