{"ast":null,"code":"import produce from \"immer\";\nimport { pullAllRoom } from \"../pullDataFunc/pullData\";\nconst INIT_SOCKET = \"roomAndChannel/INIT_SOCKET\";\nconst SET_MYID = \"roomAndChannel/SET_MYID\";\nconst ADD_ROOM = \"roomAndChannel/ADD_ROOM\";\nconst SELECT_ROOM = \"roomAndChannel/SELECT_ROOM\";\nconst ADD_CHANNEL = \"roomAndChannel/ADD_CHANNEL\";\nconst SELECT_CHANNEL = \"roomAndChannel/SELECT_CHANNEL\";\nconst RECEIVE_CHAT = \"roomAndChannel/RECEIVE_CHAT\";\nconst PULL_ROOM = \"roomAndChannel/PULL_ROOM\"; //비디오 타입 추가\n\nconst ADD_VIDEO = \"roomAndChannel/ADD_VIDEO\";\nconst SELECT_VIDEO = \"roomAndChannel/SELECT_VIDEO\";\nexport const pullRoom = () => {\n  const rooms = pullAllRoom();\n  return {\n    type: PULL_ROOM,\n    rooms: rooms\n  };\n};\nexport const initSocket = socket => ({\n  type: INIT_SOCKET,\n  socket: socket\n});\nexport const setMyid = id => ({\n  type: SET_MYID,\n  id: id\n});\nexport const addRoom = roomName => ({\n  type: ADD_ROOM,\n  room: {\n    id: nextRoomId++,\n    name: roomName,\n    channels: [],\n    videos: []\n  }\n});\nexport const selectRoom = roomId => ({\n  type: SELECT_ROOM,\n  id: roomId\n});\nexport const addChannel = (id, channelName) => ({\n  type: ADD_CHANNEL,\n  channel: {\n    id: id,\n    name: channelName,\n    chat: []\n  }\n});\nexport const selectChannel = channelId => ({\n  type: SELECT_CHANNEL,\n  id: channelId\n});\nexport const receiveChat = chat => ({\n  type: RECEIVE_CHAT,\n  chat: chat\n}); // 비디오 객체 상새 형태\n\nexport const addVideo = (id, videoName) => ({\n  type: ADD_VIDEO,\n  video: {\n    id: id,\n    name: videoName\n  }\n});\nexport const selectVideo = videoId => ({\n  type: SELECT_VIDEO,\n  id: videoId\n});\nlet nextRoomId = 1;\nconst initialState = {\n  socket: null,\n  myid: 5469775,\n  selectRoom: 0,\n  selectChannel: 0,\n  rooms: [{\n    id: 1,\n    name: \"first room\",\n    channels: [{\n      id: 1,\n      name: \"1-1 channel\",\n      chat: []\n    }, {\n      id: 2,\n      name: \"1-2 channel\",\n      chat: [// {\n        //     id: 5555555,\n        //     name: '김수환',\n        //     time: '4:22 PM',\n        //     content: '안녕하세요 여러분~!'\n        // },\n        // {\n        //     id: 5469775,\n        //     name: '이상철',\n        //     time: '5:34 AM',\n        //     content: '방가방가 여러분~!'\n        // },\n        // {\n        //     id: 6666666,\n        //     name: '병률짱',\n        //     time: '0:00 AM',\n        //     content: '에취!'\n        // },\n      ]\n    }],\n    videos: [{\n      id: 1,\n      name: \"1-1 video room\"\n    }]\n  }, {\n    id: 2,\n    name: \"second room\",\n    channels: [{\n      id: 1,\n      name: \"2-1 channel\",\n      chat: []\n    }, {\n      id: 2,\n      name: \"2-2 channel\",\n      chat: []\n    }],\n    videos: [{\n      id: 1,\n      name: \"2-1 video room\"\n    }]\n  }]\n};\nexport default function roomAndChannel() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INIT_SOCKET:\n      return { ...state,\n        socket: action.socket\n      };\n\n    case PULL_ROOM:\n      console.log(action.rooms);\n      return { ...state\n      };\n\n    case SET_MYID:\n      return { ...state,\n        myid: action.id\n      };\n\n    case ADD_ROOM:\n      return { ...state,\n        rooms: state.rooms.concat(action.room)\n      };\n\n    case SELECT_ROOM:\n      return { ...state,\n        selectRoom: action.id,\n        selectChannel: 0\n      };\n\n    case ADD_CHANNEL:\n      return produce(state, draft => {\n        draft.rooms[state.selectRoom - 1].channels.push(action.channel);\n      });\n\n    case SELECT_CHANNEL:\n      return { ...state,\n        selectChannel: action.id\n      };\n\n    case RECEIVE_CHAT:\n      let sendRoom;\n      let sendChannel;\n      state.rooms.map(room => {\n        if (room.name == action.chat.channel_name) {\n          sendRoom = room.id;\n          room.channels.map(channel => {\n            if (channel.name == action.chat.room_name) {\n              sendChannel = channel.id;\n            }\n          });\n        }\n      });\n      return produce(state, draft => {\n        draft.rooms[sendRoom - 1].channels[sendChannel - 1].chat.push(action.chat);\n      });\n    //비디오 채널 추가 및 선택 ========================\n\n    case ADD_VIDEO:\n      return produce(state, draft => {\n        draft.rooms[state.selectRoom - 1].videos.push(action.video);\n      });\n\n    case SELECT_VIDEO:\n      return { ...state,\n        selectVideo: action.id\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/82105/Desktop/22.01.07/Frontend/src/Components/modules/roomAndChannel.js"],"names":["produce","pullAllRoom","INIT_SOCKET","SET_MYID","ADD_ROOM","SELECT_ROOM","ADD_CHANNEL","SELECT_CHANNEL","RECEIVE_CHAT","PULL_ROOM","ADD_VIDEO","SELECT_VIDEO","pullRoom","rooms","type","initSocket","socket","setMyid","id","addRoom","roomName","room","nextRoomId","name","channels","videos","selectRoom","roomId","addChannel","channelName","channel","chat","selectChannel","channelId","receiveChat","addVideo","videoName","video","selectVideo","videoId","initialState","myid","roomAndChannel","state","action","console","log","concat","draft","push","sendRoom","sendChannel","map","channel_name","room_name"],"mappings":"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","sourcesContent":["import produce from \"immer\";\r\nimport { pullAllRoom } from \"../pullDataFunc/pullData\";\r\n\r\nconst INIT_SOCKET = \"roomAndChannel/INIT_SOCKET\";\r\nconst SET_MYID = \"roomAndChannel/SET_MYID\";\r\nconst ADD_ROOM = \"roomAndChannel/ADD_ROOM\";\r\nconst SELECT_ROOM = \"roomAndChannel/SELECT_ROOM\";\r\nconst ADD_CHANNEL = \"roomAndChannel/ADD_CHANNEL\";\r\nconst SELECT_CHANNEL = \"roomAndChannel/SELECT_CHANNEL\";\r\nconst RECEIVE_CHAT = \"roomAndChannel/RECEIVE_CHAT\";\r\nconst PULL_ROOM = \"roomAndChannel/PULL_ROOM\";\r\n\r\n//비디오 타입 추가\r\nconst ADD_VIDEO = \"roomAndChannel/ADD_VIDEO\";\r\nconst SELECT_VIDEO = \"roomAndChannel/SELECT_VIDEO\";\r\n\r\nexport const pullRoom = () => {\r\n  const rooms = pullAllRoom();\r\n  return {\r\n    type: PULL_ROOM,\r\n    rooms: rooms,\r\n  };\r\n};\r\n\r\nexport const initSocket = (socket) => ({\r\n  type: INIT_SOCKET,\r\n  socket: socket,\r\n});\r\n\r\nexport const setMyid = (id) => ({\r\n  type: SET_MYID,\r\n  id: id,\r\n});\r\nexport const addRoom = (roomName) => ({\r\n  type: ADD_ROOM,\r\n  room: {\r\n    id: nextRoomId++,\r\n    name: roomName,\r\n    channels: [],\r\n    videos: [],\r\n  },\r\n});\r\n\r\nexport const selectRoom = (roomId) => ({\r\n  type: SELECT_ROOM,\r\n  id: roomId,\r\n});\r\n\r\nexport const addChannel = (id, channelName) => ({\r\n  type: ADD_CHANNEL,\r\n  channel: {\r\n    id: id,\r\n    name: channelName,\r\n    chat: [],\r\n  },\r\n});\r\n\r\nexport const selectChannel = (channelId) => ({\r\n  type: SELECT_CHANNEL,\r\n  id: channelId,\r\n});\r\n\r\nexport const receiveChat = (chat) => ({\r\n  type: RECEIVE_CHAT,\r\n  chat: chat,\r\n});\r\n\r\n// 비디오 객체 상새 형태\r\nexport const addVideo = (id, videoName) => ({\r\n  type: ADD_VIDEO,\r\n  video: {\r\n    id: id,\r\n    name: videoName,\r\n  },\r\n});\r\n\r\nexport const selectVideo = (videoId) => ({\r\n  type: SELECT_VIDEO,\r\n  id: videoId,\r\n});\r\n\r\nlet nextRoomId = 1;\r\n\r\nconst initialState = {\r\n  socket: null,\r\n  myid: 5469775,\r\n  selectRoom: 0,\r\n  selectChannel: 0,\r\n  rooms: [\r\n    {\r\n      id: 1,\r\n      name: \"first room\",\r\n      channels: [\r\n        {\r\n          id: 1,\r\n          name: \"1-1 channel\",\r\n          chat: [],\r\n        },\r\n        {\r\n          id: 2,\r\n          name: \"1-2 channel\",\r\n          chat: [\r\n            // {\r\n            //     id: 5555555,\r\n            //     name: '김수환',\r\n            //     time: '4:22 PM',\r\n            //     content: '안녕하세요 여러분~!'\r\n            // },\r\n            // {\r\n            //     id: 5469775,\r\n            //     name: '이상철',\r\n            //     time: '5:34 AM',\r\n            //     content: '방가방가 여러분~!'\r\n            // },\r\n            // {\r\n            //     id: 6666666,\r\n            //     name: '병률짱',\r\n            //     time: '0:00 AM',\r\n            //     content: '에취!'\r\n            // },\r\n          ],\r\n        },\r\n      ],\r\n      videos: [\r\n        {\r\n          id: 1,\r\n          name: \"1-1 video room\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"second room\",\r\n      channels: [\r\n        {\r\n          id: 1,\r\n          name: \"2-1 channel\",\r\n          chat: [],\r\n        },\r\n        {\r\n          id: 2,\r\n          name: \"2-2 channel\",\r\n          chat: [],\r\n        },\r\n      ],\r\n      videos: [\r\n        {\r\n          id: 1,\r\n          name: \"2-1 video room\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport default function roomAndChannel(state = initialState, action) {\r\n  switch (action.type) {\r\n    case INIT_SOCKET:\r\n      return { ...state, socket: action.socket };\r\n    case PULL_ROOM:\r\n      console.log(action.rooms);\r\n      return { ...state };\r\n    case SET_MYID:\r\n      return { ...state, myid: action.id };\r\n    case ADD_ROOM:\r\n      return { ...state, rooms: state.rooms.concat(action.room) };\r\n    case SELECT_ROOM:\r\n      return { ...state, selectRoom: action.id, selectChannel: 0 };\r\n    case ADD_CHANNEL:\r\n      return produce(state, (draft) => {\r\n        draft.rooms[state.selectRoom - 1].channels.push(action.channel);\r\n      });\r\n    case SELECT_CHANNEL:\r\n      return { ...state, selectChannel: action.id };\r\n    case RECEIVE_CHAT:\r\n      let sendRoom;\r\n      let sendChannel;\r\n      state.rooms.map((room) => {\r\n        if (room.name == action.chat.channel_name) {\r\n          sendRoom = room.id;\r\n          room.channels.map((channel) => {\r\n            if (channel.name == action.chat.room_name) {\r\n              sendChannel = channel.id;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return produce(state, (draft) => {\r\n        draft.rooms[sendRoom - 1].channels[sendChannel - 1].chat.push(\r\n          action.chat\r\n        );\r\n      });\r\n    //비디오 채널 추가 및 선택 ========================\r\n    case ADD_VIDEO:\r\n      return produce(state, (draft) => {\r\n        draft.rooms[state.selectRoom - 1].videos.push(action.video);\r\n      });\r\n    case SELECT_VIDEO:\r\n      return { ...state, selectVideo: action.id };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}