{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82105\\\\Desktop\\\\22.01.07\\\\Frontend\\\\src\\\\Components\\\\Container\\\\VideoChannels.js\",\n    _s = $RefreshSig$();\n\nimport { Accordion } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { addVideo, selectVideo, selectRoom } from \"../modules/roomAndChannel\";\nimport PlusVideoContainer from \"./PlusVideoContainer\";\nimport Modal from \"react-modal\";\nimport Rtc from \"../../Rtc\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccordionItemColor = styled(Accordion.Item)`\n  background-color: transparent;\n`;\n_c = AccordionItemColor;\nconst ChannelButton = styled.div`\n  background-color: transparent;\n  color: white;\n  cursor: pointer;\n`;\n_c2 = ChannelButton;\nconst ModalForVideo = styled(Modal)`\n  width: 100%;\n  height: 100%;\n  background-color: black;\n  opacity: 0.8;\n`;\n_c3 = ModalForVideo;\nconst AccordionBodyPadding = styled(Accordion.Body)`\n  padding-top: 7px;\n`;\n_c4 = AccordionBodyPadding;\n\nconst VideoChannels = _ref => {\n  _s();\n\n  let {\n    rooms\n  } = _ref;\n  const store = useSelector(state => state);\n  const dispatch = useDispatch();\n  const [isOpen, setIsOpen] = useState(false);\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const [videoName, setVideoName] = useState(\"\");\n\n  const InputVideoName = e => {\n    setVideoName(e.target.value);\n  };\n\n  const InsertVideo = () => {\n    console.log(\"124\");\n    if (store.rooms[store.selectRoom - 1] !== undefined) dispatch(addVideo(store.rooms[store.selectRoom - 1].videos.length + 1, videoName));\n  };\n\n  const chooseVideo = id => {\n    dispatch(selectVideo(id));\n    setIsOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Accordion, {\n    defaultActiveKey: \"0\",\n    children: /*#__PURE__*/_jsxDEV(AccordionItemColor, {\n      eventKey: \"0\",\n      children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n        children: \"Videos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AccordionBodyPadding, {\n        children: [rooms.videos && rooms.videos.map(video => /*#__PURE__*/_jsxDEV(ChannelButton, {\n          roomId: video.id,\n          onClick: () => chooseVideo(video.id),\n          children: [\"# \", video.name, \" \", /*#__PURE__*/_jsxDEV(ModalForVideo, {\n            isOpen: isOpen,\n            ariaHideApp: false,\n            children: /*#__PURE__*/_jsxDEV(Rtc, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(PlusVideoContainer, {\n          set: show,\n          setShow: handleClose,\n          InsertVideo: InsertVideo,\n          InputVideoName: InputVideoName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChannelButton, {\n          onClick: () => {\n            setShow(true);\n          },\n          children: \"+video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VideoChannels, \"jB+dqaoaD6caJx2wbuGFMQDX8lo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c5 = VideoChannels;\nexport default VideoChannels;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"AccordionItemColor\");\n$RefreshReg$(_c2, \"ChannelButton\");\n$RefreshReg$(_c3, \"ModalForVideo\");\n$RefreshReg$(_c4, \"AccordionBodyPadding\");\n$RefreshReg$(_c5, \"VideoChannels\");","map":{"version":3,"sources":["C:/Users/82105/Desktop/22.01.07/Frontend/src/Components/Container/VideoChannels.js"],"names":["Accordion","styled","useSelector","useDispatch","useState","addVideo","selectVideo","selectRoom","PlusVideoContainer","Modal","Rtc","AccordionItemColor","Item","ChannelButton","div","ModalForVideo","AccordionBodyPadding","Body","VideoChannels","rooms","store","state","dispatch","isOpen","setIsOpen","show","setShow","handleClose","videoName","setVideoName","InputVideoName","e","target","value","InsertVideo","console","log","undefined","videos","length","chooseVideo","id","map","video","name"],"mappings":"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","sourcesContent":["import { Accordion } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { addVideo, selectVideo, selectRoom } from \"../modules/roomAndChannel\";\r\nimport PlusVideoContainer from \"./PlusVideoContainer\";\r\nimport Modal from \"react-modal\";\r\nimport Rtc from \"../../Rtc\";\r\n\r\nconst AccordionItemColor = styled(Accordion.Item)`\r\n  background-color: transparent;\r\n`;\r\nconst ChannelButton = styled.div`\r\n  background-color: transparent;\r\n  color: white;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ModalForVideo = styled(Modal)`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: black;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst AccordionBodyPadding = styled(Accordion.Body)`\r\n  padding-top: 7px;\r\n`;\r\n\r\nconst VideoChannels = ({ rooms }) => {\r\n  const store = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n\r\n  const [videoName, setVideoName] = useState(\"\");\r\n\r\n  const InputVideoName = (e) => {\r\n    setVideoName(e.target.value);\r\n  };\r\n\r\n  const InsertVideo = () => {\r\n    console.log(\"124\");\r\n    if (store.rooms[store.selectRoom - 1] !== undefined)\r\n      dispatch(\r\n        addVideo(store.rooms[store.selectRoom - 1].videos.length + 1, videoName)\r\n      );\r\n  };\r\n\r\n  const chooseVideo = (id) => {\r\n    dispatch(selectVideo(id));\r\n    setIsOpen(true);\r\n  };\r\n  return (\r\n    <Accordion defaultActiveKey=\"0\">\r\n      <AccordionItemColor eventKey=\"0\">\r\n        <Accordion.Header>Videos</Accordion.Header>\r\n        <AccordionBodyPadding>\r\n          {rooms.videos &&\r\n            rooms.videos.map((video) => (\r\n              <ChannelButton\r\n                roomId={video.id}\r\n                onClick={() => chooseVideo(video.id)}\r\n              >\r\n                # {video.name}{\" \"}\r\n                <ModalForVideo isOpen={isOpen} ariaHideApp={false}>\r\n                  <Rtc />\r\n                </ModalForVideo>\r\n              </ChannelButton>\r\n            ))}\r\n          <PlusVideoContainer\r\n            set={show}\r\n            setShow={handleClose}\r\n            InsertVideo={InsertVideo}\r\n            InputVideoName={InputVideoName}\r\n          />\r\n          <ChannelButton\r\n            onClick={() => {\r\n              setShow(true);\r\n            }}\r\n          >\r\n            +video\r\n          </ChannelButton>\r\n        </AccordionBodyPadding>\r\n      </AccordionItemColor>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default VideoChannels;\r\n"]},"metadata":{},"sourceType":"module"}